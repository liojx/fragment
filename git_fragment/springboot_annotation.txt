@Retention  说明该注解类的生命周期
  SOURCE: 表明之保留在源文件中
  CLASS：表明保留在class文件中，一旦加载到JVM就被丢弃
  RUNTIME：注解保留在程序运行期，此时可通过反射获得定义在某个类上的所有注解

@Target 表明注解被声明在那些类之前
  TYPE: 注解只能声明在类上
  FIELD：注解声明在一个字段之前
  METHOD：注解声明在一个方法之前
  PARAMETER: 注解声明在一个参数之前
  CONSTRUCTOR: 注解声明在一个构造方法之前
  LOCAL_VARIABLE：说明该注解只能声明在一个局部变量前
  ANNOTATION_TYPE：说明该注解只能声明在一个注解类型前
  PACKAGE：说明该注解只能声明在一个包名前

@PropertySource 
  注册Properties文件里面的key和value到某个PropertyClass里面。我DruidProperties 声明字段，ProdProfile去Autowired，发现
    DruidProperties 注解为@PropertySource("classpath:config/sersver.properties")
    DruidPropertiesDev 注解为 DruidPropertiesDev
    而上面ProdProfile 的property始终为dev的值。我试图通过互联网引擎搜索答案，无奈，没有。我只有读源码，结果源码英文注释写得很清楚，
    通过扫描，如果a.pro和b.pro里面有重复值，那么哪个后注册的就win或者重写，这里我的DruidPropertiesDev类在后面，而server和dev 属性文件的key值都一样
    所以，dev把server覆盖了。
    
